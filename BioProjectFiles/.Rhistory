dev.off()
}
tree <- consensus(t ,p= 0.3, check.labels = TRUE)
png(filename = "UPGMA_result.png")
plot(tree, align.tip.label = TRUE)
tr <- list()
for(i in 1:7){
tmp= d[i,,]
tr[[i]]= nj(tmp)
png(filename = paste("NJ_gene", name[i], ".png", sep=""))
plot(tr[[i]], align.tip.label = TRUE)
dev.off()
}
tree <- consensus(tr ,p= 0.3, check.labels = TRUE)
png(filename = paste("NJ_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
d <- array(data= NA, dim=c(5, 5))
for (i in 1:5)
for (j in 1:5){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(gene[i, k], gene[j, k], type = "global", substitutionMatrix = mat, gapOpening = 1, gapExtension = 1)
d[i, j]= tmp@score
}
}
d <- array(data= NA, dim=c(5, 5))
d <- array(data= NA, dim=c(5, 5))
for (i in 1:5)
for (j in 1:5){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(gene[i, k], gene[j, k], type = "global", substitutionMatrix = mat, gapOpening = 1, gapExtension = 1)
d[i, j]= tmp@score
}
tree= upgma(d)
plot(tree)
d <- array(data= NA, dim=c(5, 5))
for (i in 1:5)
for (j in 1:5){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(gene[i, k], gene[j, k], type = "global", substitutionMatrix = "BLOSUM62", gapOpening = 1, gapExtension = 1)
d[i, j]= tmp@score
}
tree= upgma(d)
plot(tree)
colnames(d) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tree= upgma(d)
plot(tree)
tr <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tr[[i]]= nj(tmp)
png(filename = paste("NJ_gene", name[i], ".png", sep=""))
plot(tr[[i]], align.tip.label = TRUE)
dev.off()
}
reserved_ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire )
ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire )
gene <- matrix(data = NA, nrow = 5, ncol = 7, byrow = FALSE,
dimnames = NULL)
new_start <- 1
for(i in 1:5){
for(j in 1:7){
ebola[i] <- substring(ebola[i], new_start)
mini_ebola <- substr(ebola[i], 1, 6000)
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(mini_ebola, Marburg_Genes[j], type = "local-global", substitutionMatrix = mat, gapOpening = 0, gapExtension = 1)
gene[i, j]= gsub("-", "", (tmp@pattern))
start <- tmp@pattern@range
new_start <- start@start + start@width - 1000
}
}
ebola <- reserved_ebola
d <- array(data= NA, dim=c(7, 5, 5))
for(k in 1:7){
for(i in 1:5){
for(j in 1:5){
mat <- nucleotideSubstitutionMatrix(match = 3, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(gene[i, k], gene[j, k], type = "global", substitutionMatrix = mat, gapOpening = 0, gapExtension = 1)
d[k, i, j]= tmp@score
}
}
}
name= c("NP", "VP35", "VP40", "GP", "VP30", "VP24", "L")
t <- list()
for(i in 1:7){
tmp= d[i,,]
t[[i]]<- upgma(tmp)
png(filename = paste("UPGMA_gene", name[i], ".png", sep=""))
plot(t[[i]], align.tip.label = TRUE)
dev.off()
}
t <- list()
for(i in 1:7){
tmp= d[i,,]
t[[i]]<- upgma(tmp)
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
png(filename = paste("UPGMA_gene", name[i], ".png", sep=""))
plot(t[[i]], align.tip.label = TRUE)
dev.off()
}
tr <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tr[[i]]= nj(tmp)
png(filename = paste("NJ_gene", name[i], ".png", sep=""))
plot(tr[[i]], align.tip.label = TRUE)
dev.off()
}
tr <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tr[[i]]= nj(tmp)
png(filename = paste("NJ_gene", name[i], ".png", sep=""))
plot(tr[[i]], align.tip.label = TRUE)
# dev.off()
}
t <- list()
for(i in 1:7){
tmp= d[i,,]
t[[i]]<- upgma(tmp)
rownames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
png(filename = paste("UPGMA_gene", name[i], ".png", sep=""))
plot(t[[i]], align.tip.label = TRUE)
dev.off()
}
t <- list()
for(i in 1:7){
tmp= d[i,,]
t[[i]]<- upgma(tmp)
rownames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
png(filename = paste("UPGMA_gene", name[i], ".png", sep=""))
plot(t[[i]], align.tip.label = TRUE)
dev.off()
}
t <- list()
for(i in 1:7){
tmp= d[i,,]
#  rownames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
t[[i]]<- upgma(tmp)
png(filename = paste("UPGMA_gene", name[i], ".png", sep=""))
plot(t[[i]], align.tip.label = TRUE)
dev.off()
}
tree <- consensus(t ,p= 0.3, check.labels = TRUE)
png(filename = "UPGMA_result.png")
plot(tree, align.tip.label = TRUE)
tr <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tr[[i]]= nj(tmp)
png(filename = paste("NJ_gene", name[i], ".png", sep=""))
plot(tr[[i]], align.tip.label = TRUE)
dev.off()
}
tree <- consensus(tr ,p= 0.3, check.labels = TRUE)
png(filename = paste("NJ_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
colnames(d) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tree= upgma(d)
dd <- array(data= NA, dim=c(5, 5))
for (i in 1:5)
for (j in 1:5){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(gene[i, k], gene[j, k], type = "global", substitutionMatrix = "BLOSUM62", gapOpening = 1, gapExtension = 1)
dd[i, j]= tmp@score
}
colnames(d) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tree= upgma(dd)
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tree= upgma(dd)
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
Marburg <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Marburg_genome.fasta", format = 'fasta')
ebola <- ebola+ Marburg
Marburg <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Marburg_genome.fasta", format = 'fasta')
ebola <- ebola+ c(Marburg)
a <- c(1, 2)
a<- a + 3
reserved_ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire, Marburg )
ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire, Marburg )
dd <- array(data= NA, dim=c(5, 5))
for (i in 1:6)
for (j in 1:6){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(ebola[i], ebola[j], type = "global", substitutionMatrix = "BLOSUM62", gapOpening = 1, gapExtension = 1)
dd[i, j]= tmp@score
}
dd <- array(data= NA, dim=c(6, 6))
for (i in 1:6)
for (j in 1:6){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(ebola[i], ebola[j], type = "global", substitutionMatrix = "BLOSUM62", gapOpening = 1, gapExtension = 1)
dd[i, j]= tmp@score
}
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd)
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
dd <- array(data= NA, dim=c(6, 6))
for (i in 1:6)
for (j in 1:6){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(ebola[i], ebola[j], type = "global", substitutionMatrix = mat, gapOpening = 1, gapExtension = 1)
dd[i, j]= tmp@score
}
dd[1:5, 1:5]
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd[1:5])
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd[1:5, 1:5])
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
cophenetic.phylo(dd)
cophenetic.phylo(dd)
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd)
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
cophenetic.phylo(tree)
plot(tree, align.tip.label = TRUE)
View(dd)
ans <- cophenetic.phylo(tree)
nchar(abola[1])
nchar(ebola[1])
nchar(ebola[2])
nchar(ebola[3])
nchar(ebola[4])
View(ans)
landa= 1.9* 10^(-3)
landa= (10^3)/1.9
ans <- cophenetic.phylo(tree)
ans <- ans * landa
ans
dist_node <- dist.nodes(tree)
dist_node <- dist_node * landa
dd[i, j]= dist.dna(as.DNAbin(tmp))
dd <- array(data= NA, dim=c(6, 6))
for (i in 1:6)
for (j in 1:6){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(ebola[i], ebola[j], type = "global", substitutionMatrix = mat, gapOpening = 1, gapExtension = 1)
dd[i, j]= tmp@score
dd[i, j]= dist.dna(as.DNAbin(tmp))
}
tmp
as.DNAbin(tmp)
dist.dna(as.DNAbin(tmp))
dd[i, j]= -1*tmp@score
Marburg <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Marburg_genome.fasta", format = 'fasta')
Marburg_Genes <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Marburg_Genes.fasta", format = 'fasta')
Bundinugyo <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Bundibugyo_genome.fasta", format='fasta')
Reston <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Reston_genome.fasta", format = 'fasta')
Sudan <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Sudan_genome.fasta", format = 'fasta')
TaiForest <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/TaiForest_genome.fasta", format = 'fasta')
Zaire <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Zaire_genome.fasta", format = 'fasta')
reserved_ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire, Marburg )
ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire, Marburg )
gene <- matrix(data = NA, nrow = 5, ncol = 7, byrow = FALSE,
dimnames = NULL)
new_start <- 1
for(i in 1:5){
for(j in 1:7){
ebola[i] <- substring(ebola[i], new_start)
mini_ebola <- substr(ebola[i], 1, 6000)
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(mini_ebola, Marburg_Genes[j], type = "local-global", substitutionMatrix = mat, gapOpening = 0, gapExtension = 1)
gene[i, j]= gsub("-", "", (tmp@pattern))
start <- tmp@pattern@range
new_start <- start@start + start@width - 1000
}
}
ebola <- reserved_ebola
d <- array(data= NA, dim=c(7, 5, 5))
for(k in 1:7){
for(i in 1:5){
for(j in 1:5){
mat <- nucleotideSubstitutionMatrix(match = 3, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(gene[i, k], gene[j, k], type = "global", substitutionMatrix = mat, gapOpening = 0, gapExtension = 1)
d[k, i, j]= -1*tmp@score
}
}
}
name= c("NP", "VP35", "VP40", "GP", "VP30", "VP24", "L")
for (i in 1:7){
tmp <- d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
write.csv(tmp, file = paste(name[i], ".csv", sep=""))
}
t <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
t[[i]]<- upgma(tmp)
png(filename = paste("UPGMA_gene", name[i], ".png", sep=""))
plot(t[[i]], align.tip.label = TRUE)
dev.off()
}
tree <- consensus(t ,p= 0.3, check.labels = TRUE)
png(filename = "UPGMA_result.png")
plot(tree, align.tip.label = TRUE)
tr <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tr[[i]]= nj(tmp)
png(filename = paste("NJ_gene", name[i], ".png", sep=""))
plot(tr[[i]], align.tip.label = TRUE)
dev.off()
}
tree <- consensus(tr ,p= 0.3, check.labels = TRUE)
png(filename = paste("NJ_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
dd <- array(data= NA, dim=c(6, 6))
for (i in 1:6)
for (j in 1:6){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(ebola[i], ebola[j], type = "global", substitutionMatrix = mat, gapOpening = 1, gapExtension = 1)
dd[i, j]= -1*tmp@score
#  dd[i, j]= dist.dna(as.DNAbin(tmp))
}
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd[1:5, 1:5])
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd)
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
landa= (10^3)/1.9
ans <- cophenetic.phylo(tree)
ans <- ans * landa
dist_node <- dist.nodes(tree)
dist_node <- dist_node * landa
mult <- readDNAStringSet(c("Genome Files/Zaire_genome.fasta", "Genome Files/TaiForest_genome.fasta", "Genome Files/Bundibugyo_genome.fasta", "Genome Files/Reston_genome.fasta", "Genome Files/Sudan_genome.fasta"), format = 'fasta')
Marburg <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Marburg_genome.fasta", format = 'fasta')
Marburg_Genes <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Marburg_Genes.fasta", format = 'fasta')
Bundinugyo <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Bundibugyo_genome.fasta", format='fasta')
Reston <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Reston_genome.fasta", format = 'fasta')
Sudan <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Sudan_genome.fasta", format = 'fasta')
TaiForest <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/TaiForest_genome.fasta", format = 'fasta')
Zaire <- readDNAStringSet("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Zaire_genome.fasta", format = 'fasta')
reserved_ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire, Marburg )
ebola <- c(Bundinugyo, Reston, Sudan, TaiForest, Zaire, Marburg )
gene <- matrix(data = NA, nrow = 5, ncol = 7, byrow = FALSE,
dimnames = NULL)
new_start <- 1
for(i in 1:5){
for(j in 1:7){
ebola[i] <- substring(ebola[i], new_start)
mini_ebola <- substr(ebola[i], 1, 6000)
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(mini_ebola, Marburg_Genes[j], type = "local-global", substitutionMatrix = mat, gapOpening = 0, gapExtension = 1)
gene[i, j]= gsub("-", "", (tmp@pattern))
start <- tmp@pattern@range
new_start <- start@start + start@width - 1000
}
}
ebola <- reserved_ebola
d <- array(data= NA, dim=c(7, 5, 5))
for(k in 1:7){
for(i in 1:5){
for(j in 1:5){
mat <- nucleotideSubstitutionMatrix(match = 3, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(gene[i, k], gene[j, k], type = "global", substitutionMatrix = mat, gapOpening = 0, gapExtension = 1)
d[k, i, j]= 1/tmp@score
}
}
}
name= c("NP", "VP35", "VP40", "GP", "VP30", "VP24", "L")
for (i in 1:7){
tmp <- d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
write.csv(tmp, file = paste(name[i], ".csv", sep=""))
}
t <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
t[[i]]<- upgma(tmp)
png(filename = paste("UPGMA_gene", name[i], ".png", sep=""))
plot(t[[i]], align.tip.label = TRUE)
dev.off()
}
tree <- consensus(t ,p= 0.3, check.labels = TRUE)
png(filename = "UPGMA_result.png")
plot(tree, align.tip.label = TRUE)
tr <- list()
for(i in 1:7){
tmp= d[i,,]
colnames(tmp) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire")
tr[[i]]= nj(tmp)
png(filename = paste("NJ_gene", name[i], ".png", sep=""))
plot(tr[[i]], align.tip.label = TRUE)
dev.off()
}
tree <- consensus(tr ,p= 0.3, check.labels = TRUE)
png(filename = paste("NJ_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
dd <- array(data= NA, dim=c(6, 6))
for (i in 1:6)
for (j in 1:6){
mat <- nucleotideSubstitutionMatrix(match = 1, mismatch = -1, baseOnly = TRUE)
tmp <- pairwiseAlignment(ebola[i], ebola[j], type = "global", substitutionMatrix = mat, gapOpening = 1, gapExtension = 1)
dd[i, j]= 1/tmp@score
#  dd[i, j]= dist.dna(as.DNAbin(tmp))
}
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd[1:5, 1:5])
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd)
png(filename = paste("globalAl_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
landa= (10^3)/1.9
ans <- cophenetic.phylo(tree)
ans <- ans * landa
dist_node <- dist.nodes(tree)
dist_node <- dist_node * landa
mult <- readDNAStringSet(c("Genome Files/Zaire_genome.fasta", "Genome Files/TaiForest_genome.fasta", "Genome Files/Bundibugyo_genome.fasta", "Genome Files/Reston_genome.fasta", "Genome Files/Sudan_genome.fasta"), format = 'fasta')
?pairwiseAlignment
?pairwiseAlignment
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd[1:5, 1:5])
png(filename = paste("global_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd[1:5, 1:5])
png(filename = paste("global_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd)
png(filename = paste("globalM_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
all = c(as.DNAbinebola)
all = c(as.DNAbin(ebola))
TM <- dist.dna(dnabin, model = "JC69", as.matrix = TRUE, gamma = 0.0019)
TM <- dist.dna(all, model = "JC69", as.matrix = TRUE, gamma = 0.0019)
mult <- readDNAStringSet(c("Zaire_genome.fasta", "TaiForest_genome.fasta", "Bundibugyo_genome.fasta", "Reston_genome.fasta", "Sudan_genome.fasta"), format = 'fasta')
mult <- readDNAStringSet(c("Zaire_genome.fasta", "TaiForest_genome.fasta", "Bundibugyo_genome.fasta", "Reston_genome.fasta", "Sudan_genome.fasta"), format = 'fasta')
align <- msaClustalW(mult, gapOpening = 1, gapExtension = 1,
substitutionMatrix = nucleotideSubstitutionMatrix(match = 3, mismatch = -1, baseOnly = TRUE))
show(align)
G <- align@unmasked
dist.dna(as.DNAbin(align))
TM <- dist.dna(all, model = "JC69", as.matrix = TRUE, gamma = 0.0019)
setwd("~/Users/Bahar/Desktop/bioProject/BioProjectFiles/")
setwd("~/Users/Bahar/Desktop/bioProject/BioProjectFiles/")
setwd("~/Desktop/bioProject/BioProjectFiles/")
mult <- readDNAStringSet(c("Zaire_genome.fasta", "TaiForest_genome.fasta", "Bundibugyo_genome.fasta", "Reston_genome.fasta", "Sudan_genome.fasta"), format = 'fasta')
mult <- readDNAStringSet(c("Zaire_genome.fasta"), format= 'fasta')
mult <- readDNAStringSet(c("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Marburg_genome.fasta"), format = 'fasta')
mult <- readDNAStringSet(c("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Zaire_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/TaiForest_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Bundibugyo_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Reston_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Sudan_genome.fasta"), format = 'fasta')
?msaClustalW
align <- msaClustalW(mult, gapOpening = 1, gapExtension = 1,
substitutionMatrix = nucleotideSubstitutionMatrix(match = 3, mismatch = -1, baseOnly = TRUE))
??msaClustalW
?msaClustalW
library(msa)
install.packages("msa")
source("https://bioconductor.org/biocLite.R")
biocLite("msa")
library(msa)
mult <- readDNAStringSet(c("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Zaire_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/TaiForest_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Bundibugyo_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Reston_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Sudan_genome.fasta"), format = 'fasta')
align <- msaClustalW(mult, gapOpening = 1, gapExtension = 1,
substitutionMatrix = nucleotideSubstitutionMatrix(match = 3, mismatch = -1, baseOnly = TRUE))
show(align)
G <- align@unmasked
dist.dna(as.DNAbin(align))
ans <- (-3*ln(1+ (-1* (ans * 3)/4)))/3
?ln
install.packages("SciViews")
library(SciViews)
ans <- (-3*ln(1+ (-1* (ans * 3)/4)))/3
ans
landa= (10^3)/1.9
ans <- cophenetic.phylo(tree)
ans <- (-3*ln(1+ (-1* (ans * 3)/4)))/3
ans <- ans * landa
ans
colnames(dd) <- c("Bundinugyo", "Reston", "Sudan", "TaiForest", "Zaire", "Marburg")
tree= upgma(dd)
png(filename = paste("globalM_result.png", sep=""))
plot(tree, align.tip.label = TRUE)
landa= (10^3)/1.9
ans <- cophenetic.phylo(tree)
ans <- (-3*ln(1+ (-1* (ans * 4)/3)))/4
ans <- ans * landa
ans
mult <- readDNAStringSet(c("/Users/Bahar/Desktop/bioProject/BioProjectFiles/Zaire_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/TaiForest_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Bundibugyo_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Reston_genome.fasta", "/Users/Bahar/Desktop/bioProject/BioProjectFiles/Sudan_genome.fasta"), format = 'fasta')
align <- msaClustalW(mult, gapOpening = 1, gapExtension = 1,
substitutionMatrix = nucleotideSubstitutionMatrix(match = 3, mismatch = -1, baseOnly = TRUE))
landa= (10^3)/1.9
align <- msaClustalW(mult, gapOpening = 1, gapExtension = 1,
substitutionMatrix = nucleotideSubstitutionMatrix(match = 0, mismatch = -1, baseOnly = TRUE))
align <- msaClustalW(mult, gapOpening = 1, gapExtension = 1,
substitutionMatrix = nucleotideSubstitutionMatrix(match = 0, mismatch = -1, baseOnly = TRUE))
dist <- dist.dna(as.DNAbin(align))
time <- (-3*ln(1+ (-1* (dist * 4)/3)))/4
time <- time * landa
time <- (-3*ln(1+ (-1* (dist * 4)/3)))/4
time
